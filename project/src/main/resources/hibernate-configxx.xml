<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- Config data source -->    
    <context:property-placeholder location="classpath:datasources.properties"/>
    <bean id="logisticSource"
          class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName">
            <value>LogisticDataSource</value>
        </property>
        <property name="xaDataSourceClassName">
            <value>oracle.jdbc.xa.client.OracleXADataSource</value>
        </property>

        <property name="xaProperties">
            <props>
                <prop key="user">${logisticDS.username}</prop>
                <prop key="password">${logisticDS.password}</prop>
                <prop key="URL">${logisticDS.url}</prop>
            </props>
        </property>

        <property name="driverClass" value="oracle.jdbc.OracleDriver"/>
        <property name="minPoolSize">${logisticDS.minPoolSize}</property>
        <property name="maxPoolSize">${logisticDS.maxPoolSize}</property>

    </bean>

    <!-- Hibernate session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="logisticSource"/>
        </property>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
                <prop key="hibernate.connection.isolation">3</prop>
                <prop key="hibernate.current_session_context_class">jta</prop> 
                <prop key="hibernate.transaction.factory_class"> 
                    org.hibernate.transaction.JTATransactionFactory 
                </prop>
                <prop key="hibernate.transaction.manager_lookup_class"> 
                    com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup 
                </prop>
            </props>
        </property>
        
        <property name="packagesToScan" value="com.viettel.vwf5"/>
    </bean>

    <bean id="hibernateSessionFactory" class="com.viettel.vfw5.base.dao.HibernateSessionFactoryImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- Atomikos Configuration -->
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
          destroy-method="close">
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
        <property name="transactionTimeout" value="300"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"
          depends-on="atomikosTransactionManager,atomikosUserTransaction">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        <property name="allowCustomIsolationLevels" value="true"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--  
         Configure the Atomikos JMX transaction  
         service to administer pending transactions  
    --> 
<!--    <bean id="jmxTransactionService"  
      class="com.atomikos.icatch.admin.jmx.JmxTransactionService"> 
         Optional: show only heuristic problem cases  
        <property name="heuristicsOnly" value="true"/> 
    </bean> 
 
     Spring JMX config  
    <bean id="mbeanServer"  
      class="org.springframework.jmx.support.MBeanServerFactoryBean"/> 
 
      
         Export the Atomikos JMX transaction service  
         to the local JMX service in the running VM (1.5 or higher)  
     
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter"> 
        <property name="beans"> 
            <map> 
                <entry key="atomikos:name=tx-service"> 
                    <ref bean="jmxTransactionService"/> 
                </entry> 
            </map> 
        </property> 
        <property name="server"> 
            <ref bean="mbeanServer"/> 
        </property> 
    </bean>     -->
</beans>