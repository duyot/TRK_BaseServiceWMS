<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

<!--     For parsing classes with @Aspect annotation -->
    <!--<aop:aspectj-autoproxy proxy-target-class="false"/>-->
    <aop:aspectj-autoproxy/>
<!--
-->   
<!--    <bean id="customizableTraceInterceptor" class="com.viettel.fw.common.aop.TraceInterceptor"
          p:enterMessage="Entering $[targetClassShortName].$[methodName]($[arguments])"
          p:exitMessage="Leaving $[targetClassShortName].$[methodName]():$[invocationTime]ms: $[returnValue]" />

    <aop:config>
        <aop:advisor advice-ref="customizableTraceInterceptor"
                     pointcut="execution(public * com.viettel.im.number.web.controller..*(..))" />
		
               
        <aop:advisor advice-ref="customizableTraceInterceptor"
                     pointcut="execution(public * com.viettel.im.number.service..*(..))" />
         
        <aop:advisor advice-ref="customizableTraceInterceptor"
                             pointcut="execution(public * com.viettel.im.number.repo..*(..))" />
        	
              
    </aop:config>-->
<!--    
    <aop:config >
        <aop:aspect  id="log" ref="logging"  >
            <aop:pointcut id="selectAll" 
                       expression="execution(* com.viettel.sale.repo.*.*(..))"/>
            <aop:before pointcut-ref="selectAll" method="logTimeMethod"/>
            <aop:after pointcut-ref="selectAll" method="afterAdvice"/>
            <aop:after-returning pointcut-ref="selectAll" 
                              returning="retVal"
                              method="afterReturningAdvice"/>
            <aop:after-throwing pointcut-ref="selectAll" 
                             throwing="ex"
                             method="AfterThrowingAdvice"/>
        </aop:aspect>
    </aop:config>

     Definition for logging aspect 
    <bean id="logging" class="com.viettel.fw.test.AopLogging"/> -->
 
 
 
    <!-- Aspect -->
    <bean id="logAspect" class="com.viettel.vfw5.base.test.AopLogging"/>
 
    <aop:config>
        <aop:aspect id="aspectLoggging" ref="logAspect">
<!--   @Before            
            <aop:pointcut id="pointCutBefore"
                 expression="execution(* com.viettel.sale.repo.*.*(..))" />
            <aop:before method="logTimeMethod" pointcut-ref="pointCutBefore" />
            
 
             @After 
            <aop:pointcut id="pointCutAfter"
                  expression="execution(* com.mkyong.customer.bo.CustomerBo.addCustomer(..))" />
 
            <aop:after method="logAfter" pointcut-ref="pointCutAfter" />
 
             @AfterReturning 
            <aop:pointcut id="pointCutAfterReturning"
                  expression="execution(* com.mkyong.customer.bo.CustomerBo.addCustomerReturnValue(..))" />
 
            <aop:after-returning method="logAfterReturning"
                         returning="result" pointcut-ref="pointCutAfterReturning" />
 
             @AfterThrowing 
            <aop:pointcut id="pointCutAfterThrowing"
                  expression="execution(* com.mkyong.customer.bo.CustomerBo.addCustomerThrowException(..))" />
 
<aop:after-throwing method="logAfterThrowing"
            throwing="error" pointcut-ref="pointCutAfterThrowing" />-->
 
            <!--@Around--> 
            <aop:pointcut id="pointCutAround"
                          expression="execution(* com.viettel.logistic.wms.*.*.*(..))" />
 
            <aop:around method="logTimeMethod" pointcut-ref="pointCutAround" />
            <!--<aop:before method="logTimeMethod" pointcut-ref="pointCutAround" />-->
        </aop:aspect>
 
    </aop:config>
        
</beans>